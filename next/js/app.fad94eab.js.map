{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/index.ts","webpack:///./src/components/material/Button.vue","webpack:///./src/components/material/Button.vue?6b1b","webpack:///./src/components/material/Button.vue?9c32","webpack:///./src/App.vue?74ee","webpack:///./src/components/material/Button.vue?8bab","webpack:///./src/service/delibird/index.ts","webpack:///./src/components/material/Snackbar.vue?19af","webpack:///./src/service/brainstorming/index.ts","webpack:///./src/service/dia/index.ts","webpack:///./src/service/google/auth/index.ts","webpack:///./src/service/google/drive/index.ts","webpack:///./src/service/google/index.ts","webpack:///./src/service/mari/parser.ts","webpack:///./src/service/index.ts","webpack:///./src/service/mari/index.ts","webpack:///./src/components/material/IconButton.vue","webpack:///./src/components/material/IconButton.vue?cac5","webpack:///./src/components/material/IconButton.vue?6ace","webpack:///./src/service/nomination/constants.ts","webpack:///./src/service/nomination/index.ts","webpack:///./src/service/preferences/index.ts","webpack:///./src/service/version/index.ts","webpack:///./src/components/material/IconRaw.vue","webpack:///./src/components/material/IconRaw.vue?4db4","webpack:///./src/components/material/IconRaw.vue?950b","webpack:///./src/App.vue","webpack:///./src/components/material/Dialog.vue","webpack:///./src/components/material/DialogAction.vue","webpack:///./src/components/material/DialogAction.vue?dfd3","webpack:///./src/components/material/DialogAction.vue?c9dd","webpack:///./src/components/material/Dialog.vue?76f8","webpack:///./src/components/material/Dialog.vue?bd7a","webpack:///./src/components/material/Snackbar.vue","webpack:///./src/components/material/Snackbar.vue?2826","webpack:///./src/components/material/Snackbar.vue?b275","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?eabf","webpack:///./src/router/index.ts","webpack:///./src/main.ts","webpack:///./src/components/material/IconRaw.vue?05d3","webpack:///./src/service/umi/index.ts","webpack:///./src/components/material/Dialog.vue?4cba","webpack:///./src/components/material/IconButton.vue?cf57"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","State","Status","state","status","idle","progress","gapiLoaded","gapiAuthed","nominations","getters","count","predicator","filter","mutations","payload","nomination","id","actions","class","className","this","outlined","raised","ctrl","attachTo","$el","unbounded","destroy","Boolean","render","delibird","alert","events","inform","brainstorming","FailReason","databaseName","databaseVersion","storeName","database","reference","init","indexedDB","open","onsuccess","onupgradeneeded","createObjectStore","query","beforeCreate","EARLY","record","queryDatabase","catch","version","full","NOT_EXISTS","queryFirebase","update","quries","results","allSettled","reduce","store","getStore","INDEXEDDB_ERROR","firebase","_","FIREBASE_ERROR","app","default","initializeApp","databaseURL","ref","child","once","val","save","put","umi","StatusCode","Pending","resultTime","transaction","objectStore","dia","keyPath","autoIncrement","load","getAll","saveAll","remove","delete","clear","AuthKit","authStatusChanged","navigator","onLine","gapi","initClient","client","apiKey","clientId","discoveryDocs","scope","join","auth2","getAuthInstance","isSignedIn","listen","signedIn","currentUser","getAuthResponse","access_token","signIn","signOut","ids","Map","filename","validator","listResponse","drive","files","list","q","pageSize","spaces","folder","fields","file","fileResponse","fileId","alt","solidFile","set","mimeType","blob","token","url","method","metadata","has","parents","form","FormData","append","Blob","JSON","stringify","authHeader","response","responseRaw","fetch","headers","Headers","Authorization","body","json","auth","callback","scriptTag","defer","async","parser","parse","mail","scanner","confirmedTime","parseInt","internalDate","confirmationMailId","resultMailId","header","matched","match","title","trim","part","parts","partId","mailBody","base64","image","parseId","ScannerCode","Redacted","lngLat","Rejected","reasons","reason","matchedMainBody","mainBody","indexReasons","keywords","keyword","pos","search","sort","a","b","map","pair","lng","parseFloat","lat","text","unescape","decodeURIComponent","escape","atob","replace","ProgressItem","total","finished","Progress","lists","messages","onProgress","percent","log","left","queryAfter","ignoreIds","flatMap","preferences","general","queryAfterLatest","latest","Math","floor","time","max","queries","values","keys","addList","pageToken","gmail","users","userId","filtered","includes","nextPageToken","finishList","format","metadataHeaders","fullMail","subject","details","typedError","stack","finishMessage","service","Filename","mimeJSON","google","mari","_store","addEventListener","errorEvent","errors","authed","commit","setProgress","refresh","sync","download","setStatus","processingMails","raws","getRaws","start","matchTargets","reduced","merged","merge","Array","queryBrainstorming","upload","syncing","getNominationsBlod","accessToken","migrate","legacy","importNominationsFile","input","accept","hidden","fileReader","FileReader","importNominations","readAsText","click","exportNominationsFile","anchor","URL","createObjectURL","importWayfarerJSON","parsed","mapNomination","imageUrl","clearNominations","deleteNomination","targets","pendings","packs","checkScanner","Unknown","candidates","selected","matchData","pack","candidate","requestMatch","autoQueryFirebase","queryingBrainstorming","content","forEach","from","sources","raw","icon","String","components","MaterialIconRaw","StringKeyBase","StringKey","day","missing","messageParseErrorMissingId","messageParseErrorMissingTitle","messageParseErrorMissingImage","messageParseErrorInvalidId","messageParseErrorInvalidImage","test","Accepted","Reason","undeclared","timestampSecondBound","imgUrl","toLowerCase","comparatorByTime","timeA","timeB","localStorage","setItem","def","getItem","keyQueryAfterLatest","setQueryAfterLatest","keySync","setSync","keyAutoQueryFirebase","setAutoQueryFirebase","build","symbol","IconSymbolMap","nameRegex","alertOpen","alertMessage","informMessage","informOpen","role","aria-modal","action","as-default","data-mdc-dialog-action","data-mdc-dialog-button-default","asDefault","MaterialButton","newVal","$emit","isOpen","close","MaterialDialogAction","aria-relevant","aria-atomic","labelText","MaterialIconButton","MaterialDialog","MaterialSnackbar","routes","path","component","router","history","use","mount","Scanner","color","indexOf","duplicated","scanners","statuses","iconFA","mapKeywords"],"mappings":"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","file":"js/app.fad94eab.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"charts~dashboard~details~list~map~match~preferences\":\"charts~dashboard~details~list~map~match~preferences\",\"charts\":\"charts\",\"dashboard\":\"dashboard\",\"details~map\":\"details~map\",\"details\":\"details\",\"map\":\"map\",\"list\":\"list\",\"match\":\"match\",\"preferences\":\"preferences\",\"firebase\":\"firebase\",\"mapbox\":\"mapbox\"}[chunkId]||chunkId) + \".\" + {\"charts~dashboard~details~list~map~match~preferences\":\"4ace817a\",\"charts\":\"b4ca544b\",\"dashboard\":\"f675ced2\",\"details~map\":\"df86ac01\",\"details\":\"4038509b\",\"map\":\"c0b7e21c\",\"list\":\"db1fd2a0\",\"match\":\"18935d21\",\"preferences\":\"037bf5e0\",\"firebase\":\"5e48b75b\",\"mapbox\":\"2dcfe6ae\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"charts~dashboard~details~list~map~match~preferences\":1,\"charts\":1,\"dashboard\":1,\"details~map\":1,\"details\":1,\"map\":1,\"list\":1,\"match\":1,\"preferences\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({\"charts~dashboard~details~list~map~match~preferences\":\"charts~dashboard~details~list~map~match~preferences\",\"charts\":\"charts\",\"dashboard\":\"dashboard\",\"details~map\":\"details~map\",\"details\":\"details\",\"map\":\"map\",\"list\":\"list\",\"match\":\"match\",\"preferences\":\"preferences\",\"firebase\":\"firebase\",\"mapbox\":\"mapbox\"}[chunkId]||chunkId) + \".\" + {\"charts~dashboard~details~list~map~match~preferences\":\"456360f3\",\"charts\":\"85a55bc5\",\"dashboard\":\"f9cc735b\",\"details~map\":\"370ca2bc\",\"details\":\"e45c7c88\",\"map\":\"dc687b38\",\"list\":\"6a9f041e\",\"match\":\"4e5ee524\",\"preferences\":\"a2815486\",\"firebase\":\"31d6cfe0\",\"mapbox\":\"31d6cfe0\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/next/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { createStore } from 'vuex'\n\nimport Nomination, { Predicator } from '@/service/nomination';\n\nexport namespace State {\n    export enum Status {\n        idle,\n        processingMails,\n        requestMatch,\n        queryingBrainstorming,\n        syncing\n    }\n}\n\nexport interface State {\n    status: State.Status;\n    progress: number;\n    gapiLoaded: boolean;\n    gapiAuthed: boolean;\n    nominations: Array<Nomination>;\n}\n\nexport default createStore<State>({\n    state: {\n        status: State.Status.idle,\n        progress: 0,\n        gapiLoaded: false,\n        gapiAuthed: false,\n        nominations: [],\n    },\n    getters: {\n        empty(state: State) {\n            return state.nominations.length < 1;\n        },\n        count: (state: State) => (predicator: Predicator) => {\n            return state.nominations.filter(predicator).length;\n        }\n    },\n    mutations: {\n        setStatus(state: State, payload: State.Status) {\n            state.status = payload;\n        },\n        setProgress(state: State, payload: number) {\n            state.progress = payload;\n        },\n        gapiLoaded(state: State) {\n            state.gapiLoaded = true;\n        },\n        setGAPIAuthed(state: State, payload: boolean) {\n            state.gapiAuthed = payload;\n        },\n        setNominations(state: State, payload: Array<Nomination>) {\n            state.nominations = payload;\n        },\n        deleteNomination(state: State, payload: string) {\n            state.nominations = state.nominations.filter((nomination) => nomination.id !== payload);\n        }\n    },\n    actions: {\n    },\n    modules: {\n    }\n});\n","<template>\n<button :class=\"className\">\n    <span class=\"mdc-button__ripple\"></span>\n    <span class=\"mdc-button__label\"><slot/></span>\n</button>\n</template>\n\n<script lang=\"ts\">\nimport { MDCRipple } from '@material/ripple';\nimport { Vue, Prop } from 'vue-property-decorator';\n\nexport default class MaterialButton extends Vue {\n\n    @Prop(Boolean) readonly outlined?: boolean;\n    @Prop(Boolean) readonly raised?: boolean;\n\n    private ctrl?: MDCRipple;\n\n    get className(): string {\n        let name = 'mdc-button';\n        if (this.outlined) {\n            name += ' mdc-button--outlined';\n        } else if (this.raised) {\n            name += ' mdc-button--raised';\n        }\n        return name;\n    }\n\n    mounted() {\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    updated() {\n        this.ctrl?.destroy();\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    unmounted() {\n        this.ctrl?.destroy();\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@use '~@material/button/styles';\n</style>","\nimport { MDCRipple } from '@material/ripple';\nimport { Vue, Prop } from 'vue-property-decorator';\n\nexport default class MaterialButton extends Vue {\n\n    @Prop(Boolean) readonly outlined?: boolean;\n    @Prop(Boolean) readonly raised?: boolean;\n\n    private ctrl?: MDCRipple;\n\n    get className(): string {\n        let name = 'mdc-button';\n        if (this.outlined) {\n            name += ' mdc-button--outlined';\n        } else if (this.raised) {\n            name += ' mdc-button--raised';\n        }\n        return name;\n    }\n\n    mounted() {\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    updated() {\n        this.ctrl?.destroy();\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    unmounted() {\n        this.ctrl?.destroy();\n    }\n}\n","import { render } from \"./Button.vue?vue&type=template&id=79013cda\"\nimport script from \"./Button.vue?vue&type=script&lang=ts\"\nexport * from \"./Button.vue?vue&type=script&lang=ts\"\n\nimport \"./Button.vue?vue&type=style&index=0&id=79013cda&lang=scss\"\nscript.render = render\n\nexport default script","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=4edf6c57&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Button.vue?vue&type=style&index=0&id=79013cda&lang=scss\"","import { MessageCallback } from '@/service/types';\n\nexport namespace delibird {\n    interface Events {\n        alert   : MessageCallback,  // Triggered when alert raised\n        inform  : MessageCallback,  // Triggered when some information should be passed to user\n    }\n\n    export const events: Events = {\n        alert   : () => { },\n        inform  : () => { },\n    }\n\n    export function alert(message: string) {\n        events.alert(message);\n    }\n\n    export function inform(message: string) {\n        events.inform(message);\n    }\n}","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Snackbar.vue?vue&type=style&index=0&id=12cf8ebd&lang=scss\"","import type { Reference } from '@firebase/database-types';\n\nimport { umi } from '@/service/umi';\nimport { version } from '@/service/version';\nimport Nomination from '@/service/nomination'\n\n/**\n * Result for {@link BrainstormingKit.analyse}\n */\ninterface BrainstormingStats {\n    review: number,                     // Review count\n    nomination: number,                 // Count of nominations containing reviews\n    rate: Map<string, Array<number>>,   // Map of rate lists\n    reviewTimes: Array<number>,         // List of review timestamps\n    synch: {\n        total: number,  // Count of reviews of resulted nominations\n        synched: number // Count of reviews matches the result\n    },\n}\n\n/**\n * Host Brainstorming data and handle tasks related to Brainstorming\n */\nexport namespace brainstorming {\n\n    export enum FailReason {\n        INDEXEDDB_ERROR = 'message:service.brainstorming.indexedDBError',   // Unable to query local database\n        FIREBASE_ERROR  = 'message:service.brainstorming.firebaseError',    // Unable to query firebase\n        NOT_EXISTS      = 'message:service.brainstorming.notExists',        // Nomination not exists in local database or firebase\n        EARLY           = 'message:service.brainstorming.early',            // Nomination got result before firebase exists\n    };\n\n    export interface ReviewRaw {\n        cultural: string;\n        description: string;\n        location: string;\n        quality: string;\n        safety: string;\n        uniqueness: string;\n    }\n\n    export interface Review {\n        JSON: ReviewRaw;\n        Timestamp: number;\n        author: string;\n        reasons: string;\n        stars: string;\n    }\n\n    export interface Record {\n        description: string;\n        hashTags: Array<string>;\n        imageUrl: string;\n        lastTime: number;\n        lat: string;\n        lng: string;\n        statement?: string;\n        streetAddress: string;\n        supportingImageUrl?: string;\n        title: string;\n        [name: string]: any | Review;\n    }\n\n    const databaseName = 'brainstorming';\n    const databaseVersion = 1;\n    const storeName = 'record';\n\n    let database: IDBDatabase | undefined = undefined;  // Local database\n    let reference: Reference | undefined = undefined;   // Firebase reference\n\n    export async function init() {\n        return new Promise<boolean>((resolve, reject) => {\n            const request = window.indexedDB.open(databaseName, databaseVersion);\n            request.onsuccess = () => {\n                database = request.result;\n                resolve(true);\n            };\n            request.onerror = () => reject(request.error);\n            request.onupgradeneeded = () => {\n                request.result.createObjectStore(storeName);\n            };\n        });\n    }\n\n    /**\n     * Query data from local databse and firebase (full version only)\n     * @param nomination Nomination to query\n     * @param succeed Triggered when succeed to query data\n     * @param failed Triggered when Failed to query data\n     */\n    export async function query(nomination: Nomination): Promise<Record> {\n        if (beforeCreate(nomination)) {\n            throw new Error(FailReason.EARLY);\n        }\n        let record = await queryDatabase(nomination.id).catch(error => {\n            throw error;\n        });\n        if (record) {\n            return record;\n        }\n        if (!version.full) {\n            throw new Error(FailReason.NOT_EXISTS);\n        }\n        record = await queryFirebase(nomination.id).catch(error => {\n            throw error;\n        });\n        if (!record) throw new Error(FailReason.NOT_EXISTS);\n        return record;\n    }\n\n    /**\n     * Query firebase to update local database\n     * @param nominations Nomination list\n     * @param finish Triggered when all query finishes\n     */\n    export async function update(nominations: Array<Nomination>): Promise<number> {\n        const quries: Array<Promise<Record | undefined>> = [];\n        for (const nomination of nominations) {\n            if (beforeCreate(nomination)) continue;\n            quries.push(queryFirebase(nomination.id));\n        }\n        const results = await Promise.allSettled(quries);\n        return results.reduce((count, result) => {\n            return count + result.status === 'fulfilled' ? 1 : 0;\n        }, 0);\n    }\n\n    /**\n     * Query from the local IndexedDB database\n     * @param id Brainstorming ID\n     */\n    function queryDatabase(id: string) {\n        return new Promise<Record | undefined>((resolve, reject) => {\n            const store = getStore('readonly');\n            if (!store) {\n                reject(FailReason.INDEXEDDB_ERROR);\n                return;\n            }\n            const request = store.get(id);\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => resolve(undefined);\n        });\n    }\n\n    /**\n     * Query from the Firebase database\n     * @param id Brainstorming ID\n     */\n    async function queryFirebase(id: string): Promise<Record | undefined> {\n        const [ firebase, _ ] = await Promise.all([\n            import(/* webpackChunkName: 'firebase' */ '@firebase/app'),\n            import(/* webpackChunkName: 'firebase' */ '@firebase/database'),\n        ]).catch(_ => {\n            throw new Error(FailReason.FIREBASE_ERROR);\n        });\n        if (!reference) {\n            const app = firebase.default.initializeApp({ databaseURL: 'https://oprbrainstorming.firebaseio.com' });\n            if (!reference) reference = app.database!().ref('c/reviews/');\n        }\n        const data = await reference.child(id).once('value').catch(_ => {\n            throw new Error(FailReason.FIREBASE_ERROR);\n        });\n        const record: Record | undefined = data.val();\n        if (record) save(id, record);\n        return record;\n    }\n\n    function save(id: string, record: Record) {\n        const store = getStore('readwrite');\n        if (!store) return;\n        store.put(record, id);\n    }\n\n    /**\n     * Clear local database\n     */\n    function clear() {\n        const store = getStore('readwrite');\n        if (!store) return;\n        store.clear();\n    }\n\n    /**\n     * Check if the nomination got result before creation of firebase, should skip query if true\n     * @param nomination The nomination\n     */\n    function beforeCreate(nomination: Nomination): boolean {\n        return nomination.status !== umi.StatusCode.Pending && nomination.resultTime < 1518796800000;\n    }\n\n    function getStore(mode: IDBTransactionMode): IDBObjectStore | undefined {\n        if (!database) return undefined;\n        return database.transaction([ storeName ], mode).objectStore(storeName);\n    }\n\n    /**\n     * Analyse reviews of given nominations\n     * @param nominations Nomination list\n     */\n    /*\n    analyse(nominations: Array<Nomination>): BrainstormingStats {\n        const stats: BrainstormingStats = {\n            review: 0,\n            nomination: 0,\n            rate: new Map(),\n            reviewTimes: [],\n            synch: { total: 0, synched: 0 },\n        };\n        const rateKeys = Object.keys(RateItems);\n        for (const key of rateKeys) {\n            stats.rate.set(key, []);\n        }\n        const statsRate = (rateJson: any, key: string) => {\n            if (rateJson[key]) {\n                stats.rate.get(key).push(parseInt(rateJson[key]));\n            }\n        }\n        for (const nomination of nominations) {\n            if (!this.data.has(nomination.id)) continue;\n            const bs = this.data.get(nomination.id);\n            const generals = [];\n            for (const key of Object.keys(bs)) {\n                if (!key.startsWith('review')) continue;\n                const review = bs[key];\n                if (!review.stars) continue;\n                stats.review += 1;\n                generals.push(review.stars);\n                const rateJson = review.JSON;\n                for (const rateKey of rateKeys) {\n                    statsRate(rateJson, rateKey);\n                }\n                stats.reviewTimes.push(review.Timestamp);\n                if (nomination.status === umi.StatusCode.Pending) continue;\n                // Synch\n                stats.synch.total += 1;\n                if (this.isSynched(review.stars, nomination)) {\n                    stats.synch.synched += 1;\n                }\n            }\n            if (generals.length < 1) continue;\n            stats.nomination += 1;\n        }\n        return stats;\n    }\n    */\n\n    /**\n     * Detect if a review matches the result\n     * \n     * - D matches duplicated\n     * - 3 or 3+ stars matches accepted and tooClose\n     * - 3- stars matches rejected\n     * \n     * @param stars Stars of the review\n     * @param status Status code of the resulted nomination\n     */\n    /*\n    private isSynched(stars: string, nomination: Nomination) {\n        if (\n            stars === 'D'\n            && nomination.status === umi.StatusCode.Rejected\n            && nomination.reasons.includes(umi.Reason.duplicated)\n        ) {\n            return true;\n        }\n        const general = parseFloat(stars);\n        if (isNaN(general)) return false;\n        \n        if (\n            nomination.status === umi.StatusCode.Accepted\n            || (nomination.status === umi.StatusCode.Rejected && nomination.reasons.includes(umi.Reason.close))\n        ) {\n            // Accepted\n            if (general >= 3) return true;\n        } else {\n            // Rejected\n            if (general < 3) return true;\n        }\n        \n        return false;\n    }*/\n}","import Nomination, { NominationData } from '@/service/nomination';\n\nexport namespace dia {\n\n    const databaseName = 'potori';\n    const databaseVersion = 1;\n    const storeName = 'nomination';\n\n    let database: IDBDatabase | undefined = undefined;\n\n    export function init() {\n        return new Promise<boolean>((resolve, reject) => {\n            const request = window.indexedDB.open(databaseName, databaseVersion);\n            request.onsuccess = () => {\n                database = request.result;\n                resolve(true);\n            };\n            request.onerror = () => reject(request.error);\n            request.onupgradeneeded = () => {\n                request.result.createObjectStore(storeName, {\n                    keyPath: 'id', autoIncrement: false\n                });\n            };\n        });\n    }\n\n    export function load() {\n        return new Promise<Array<NominationData>>((resolve, reject) => {\n            const store = getStore('readonly');\n            if (!store) {\n                reject();\n                return;\n            }\n            const request = store.getAll();\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    export function saveAll(nominations: Array<Nomination>) {\n        const store = getStore('readwrite');\n        if (!store) return;\n        for (const nomination of nominations) {\n            store.put(nomination);\n        }\n    }\n\n    export function save(nomination: Nomination) {\n        const store = getStore('readwrite');\n        if (!store) return;\n        store.put(nomination);\n    }\n\n    export function remove(id: string) {\n        const store = getStore('readwrite');\n        if (!store) return;\n        store.delete(id);\n    }\n\n    export function clear() {\n        const store = getStore('readwrite');\n        if (!store) return;\n        store.clear();\n    }\n\n    function getStore(mode: IDBTransactionMode): IDBObjectStore | undefined {\n        if (!database) return undefined;\n        return database.transaction([ storeName ], mode).objectStore(storeName);\n    }\n}","export type AuthStatusChangedCallback = (signedIn: boolean) => void;\ntype ErrorCallback = (message: string) => void;\n\n/**\n * Events for {@link AuthKit}\n */\ninterface AuthKitEvents {\n    authStatusChanged: AuthStatusChangedCallback;   // Triggered when sign-in or sign-out\n    error: ErrorCallback;   // Triggered when gapi.auth error occures\n}\n\n/**\n * Handle GAPI authentication\n */\nexport default class AuthKit {\n\n    events: AuthKitEvents = {\n        authStatusChanged: () => { },\n        error: () => { },\n    };\n\n    init() {\n        if (navigator.onLine) {\n            gapi.load('client:auth2', () => this.initClient());\n        }\n    }\n\n    /**\n     * Initialize the GAPI and load client libraries\n     */\n    private initClient() {\n        gapi.client.init({\n            apiKey: 'AIzaSyCqIaS8UizqjWrIKm5zV3_S8EffCWjKR-A',\n            clientId: '361295761775-qshg0f5buh495dhubp4v5bignk7i5dh1.apps.googleusercontent.com',\n            discoveryDocs: [\n                'https://www.googleapis.com/discovery/v1/apis/gmail/v1/rest',\n                'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'\n            ],\n            scope: [\n                'https://www.googleapis.com/auth/gmail.readonly',\n                'https://www.googleapis.com/auth/drive.file',\n                'https://www.googleapis.com/auth/drive.appdata'\n            ].join(' '),\n        }).then(\n            () => {\n                // Listen for sign-in state changes.\n                gapi.auth2.getAuthInstance().isSignedIn.listen(this.events.authStatusChanged);\n                // Handle the initial sign-in state.\n                this.events.authStatusChanged(this.signedIn);\n            },\n            this.events.error\n        );\n    }\n\n    /**\n     * Get authentication status, signed in or not\n     */\n    get signedIn() {\n        return navigator.onLine && gapi.auth2.getAuthInstance().isSignedIn.get();\n    }\n\n    /**\n     * Get the token for accessing the account\n     */\n    get accessToken() {\n        return gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().access_token;\n    }\n\n    /**\n     * Sign in\n     */\n    signIn() {\n        gapi.auth2.getAuthInstance().signIn();\n    }\n\n    /**\n     * Sign out\n     */\n    signOut() {\n        gapi.auth2.getAuthInstance().signOut();\n    }\n}","type FileValidator = (file: gapi.client.drive.File) => boolean;\n\n/**\n * Download and upload from / to Google Drive\n */\nexport default class GoogleDriveKit {\n\n    private static readonly folder = 'appDataFolder';   // The private folder in Google Drive\n\n    private ids: Map<string, string> = new Map();   // ID of files, <filename, id>\n\n    /**\n     * Download file from Google Drive.\n     * \n     * The caller should decide whether to delete the current one & download\n     * next one or not by return a boolean\n     * \n     * @param filename Name of the file to download\n     * @param callback Triggered when a file is downloaded\n     */\n    async download(filename: string, validator: FileValidator) {\n        const listResponse = await gapi.client.drive.files.list({\n            q: `name = '${filename}'`,\n            pageSize: 10,\n            spaces: GoogleDriveKit.folder,\n            fields: 'files(id)'\n        });\n        if (!listResponse.result.files) return undefined;\n        const list = listResponse.result.files;\n        for (const file of list) {\n            if (!file.id) continue;\n            const fileResponse = await gapi.client.drive.files.get({\n                fileId: file.id,\n                alt: 'media'\n            });\n            const solidFile = fileResponse.result;\n            if (validator(solidFile)) {\n                this.ids.set(filename, file.id);\n                return solidFile;\n            }\n            gapi.client.drive.files.delete({ fileId: file.id })\n        }\n    }\n\n    /**\n     * Upload file to Google Drive\n     * @param filename Filename to upload\n     * @param mimeType MIME type of the file\n     * @param blob Content to upload\n     * @param token The Google account access token\n     * @param callback Triggered when process finished\n     */\n    async upload(filename: string, mimeType: string, blob: Blob, token: string) {\n        // Ref: https://gist.github.com/tanaikech/bd53b366aedef70e35a35f449c51eced\n        let url = '';\n        let method = '';\n        const metadata: any = {\n            name: filename,\n            mimeType: mimeType,\n        };\n        // Using parent in Update will cause 403\n        if (this.ids.has(filename)) {\n            method = 'PATCH';\n            url = `https://www.googleapis.com/upload/drive/v3/files/${this.ids.get(filename)}?uploadType=multipart`;\n        } else {\n            method = 'POST';\n            url = 'https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart';\n            metadata.parents = [ GoogleDriveKit.folder ];\n        }\n        const form = new FormData();\n        form.append('metadata', new Blob([JSON.stringify(metadata)], { type: mimeType }));\n        form.append('file', blob);\n        const authHeader = `Bearer ${token}`;\n        let response: any | undefined;\n        try {\n            const responseRaw = await fetch(url, {\n                method: method,\n                headers: new Headers({ Authorization: authHeader }),\n                body: form,\n            });\n            response = await responseRaw.json();\n        } catch {\n            return false;\n        }\n        if (!response || typeof response.id !== 'string') return false;\n        this.ids.set(filename, response.id);\n        return true;\n    }\n}","import AuthKit from './auth';\nimport GoogleDriveKit from './drive';\n\ntype BasicCallback = () => void;\n\nexport default class GoogleKit {\n\n    auth = new AuthKit();\n    drive = new GoogleDriveKit();\n\n    init(callback: BasicCallback) {\n        const scriptTag = document.createElement('script');\n        scriptTag.src = 'https://apis.google.com/js/api.js';\n        scriptTag.defer = true;\n        scriptTag.async = true;\n        scriptTag.onload = callback;\n        document.head.append(scriptTag);\n    }\n}","import { umi } from '@/service/umi';\nimport Nomination, { LngLat } from '@/service/nomination';\n\n/**\n * Parsers for mail content\n */\nexport namespace parser {\n    /**\n     * Parse the full mail to nomination\n     * @param mail The full mail to parse\n     * @param status Statue of the mail\n     * @param scanner Scanner of the mail\n     * @returns The parsed nomination\n     */\n    export function parse(\n        mail: gapi.client.gmail.Message,\n        status: umi.StatusCode,\n        scanner: umi.ScannerCode\n    ): Nomination {\n        const nomination = new Nomination();\n        nomination.status = status;\n        nomination.scanner = scanner;\n        if (status === umi.StatusCode.Pending) {\n            nomination.confirmedTime = parseInt(mail.internalDate!);\n            nomination.confirmationMailId = mail.id!;\n        } else {\n            nomination.resultTime = parseInt(mail.internalDate!);\n            nomination.resultMailId = mail.id!;\n        }\n\n        // Subject -> Title\n        for (const header of mail.payload!.headers!) {\n            if (header.name === 'Subject') {\n                const matched = header.value!.match(/[:：](.+)/);\n                if (matched && matched.length > 1) {\n                    nomination.title = matched[1].trim();\n                }\n                break;\n            }\n        }\n\n        // Body -> image, id, lngLat and reason\n        for (const part of mail.payload!.parts!) {\n            if (part.partId !== '1') continue;\n            const mailBody = base64(part.body!.data!);\n            const matched = mailBody.match(/(?:googleusercontent|ggpht)\\.com\\/([0-9a-zA-Z\\-\\_]+)/);\n            if (matched && matched.length > 1) {\n                nomination.image = matched[1];\n                nomination.id = Nomination.parseId(nomination.image);\n            }\n            if (scanner === umi.ScannerCode.Redacted && status !== umi.StatusCode.Pending) {\n                nomination.lngLat = lngLat(mailBody);\n            }\n            if (status === umi.StatusCode.Rejected) {\n                nomination.status = umi.StatusCode.Rejected;\n                nomination.reasons = reason(mailBody, scanner);\n            }\n            break;\n        }\n        return nomination;\n    }\n\n    /**\n     * Parse the reject reason from mail body\n     * @param mail Body (content) of the mail\n     * @param scanner The scanner key for fetch the keywords\n     */\n    function reason(mail: string, scanner: umi.ScannerCode): Array<umi.ReasonCode> {\n        const matchedMainBody = mail.match(/(\\n|\\r|.)+?\\-NianticOps/);\n        if (!matchedMainBody || matchedMainBody.length < 1) {\n            return [ ];\n        }\n        const mainBody = matchedMainBody[0];\n\n        const indexReasons: Array<[number, umi.ReasonCode]> = []\n        for (const [code, reason] of umi.reason) {\n            const keywords = reason.keywords.get(scanner);\n            if (!keywords) continue;\n            for (const keyword of keywords) {\n                const pos = mainBody.search(keyword);\n                if (pos < 0) continue;\n                indexReasons.push([pos, code]);\n                break;\n            }\n        }\n        return indexReasons\n            .sort((a, b) => a[0] > b[0] ? 1 : -1)\n            .map((pair) => pair[1]);\n    }\n\n    /**\n     * Parse the location from mail body, only redacted mails contain location\n     * @param mail Body (content) of the mail\n     */\n    function lngLat(mail: string): LngLat | undefined {\n        const matched = mail.match(/www\\.ingress\\.com\\/intel\\?ll\\=([\\.\\d]+),([\\.\\d]+)/);\n        if (!matched || matched.length < 3) {\n            return undefined;\n        }\n        return {\n            lng: parseFloat(matched[2]),\n            lat: parseFloat(matched[1])\n        };\n    }\n\n    /**\n     * Decode base64\n     * @param text Base64 encoded text\n     * @see https://nelluil.postach.io/post/btoa-atob-zhi-yuan-zhong-wen-de-fang-fa\n     * @see https://cnodejs.org/topic/4fd6b7ba839e1e581407aac8\n     */\n    function base64(text: string) {\n        return unescape(\n            decodeURIComponent(\n                escape(window.atob(text.replace(/\\-/g, '+').replace(/\\_/g, '/')))\n            )\n        );\n    }\n}","import { Store } from 'vuex'\nimport { toRaw } from '@vue/reactivity';\n\nimport { brainstorming } from './brainstorming';\nimport { delibird } from './delibird';\nimport { dia } from './dia';\nimport { preferences } from './preferences';\nimport { umi } from './umi';\nimport { CountCallback } from './types';\nimport { State } from '@/store';\nimport GoogleKit from './google';\nimport Mari from './mari';\nimport Nomination, { NominationData } from './nomination';\n\nexport namespace service {\n\n    enum Filename {\n        nominations = 'nominations.json',\n        legacy = 'potori.json'\n    }\n\n    export interface MatchPack {\n        target: Nomination;\n        candidates: Array<Nomination>;\n        selected: string;\n    }\n\n    export interface MatchData {\n        packs: Array<MatchPack>;\n        callback: () => void;\n    }\n\n    const mimeJSON = 'application/json';\n\n    const google = new GoogleKit();\n    const mari = new Mari();\n    let _store: Store<State>;\n\n    export const matchData: MatchData = {\n        packs: [],\n        callback: () => { }\n    };\n\n    export const errors: Array<ErrorEvent> = [];\n\n    export function init(store: Store<State>) {\n        _store = store;\n\n        window.addEventListener('error', (errorEvent) => {\n            errors.push(errorEvent);\n        });\n\n        load();\n\n        google.init(() => {\n            google.auth.events.authStatusChanged = (authed) => {\n                _store.commit('setGAPIAuthed', authed);\n                _store.commit('gapiLoaded');\n            };\n            google.auth.init();\n\n            mari.events.alert = (message) => {\n                delibird.alert(message);\n            }\n            mari.events.progress = (progress) => {\n                setProgress(progress);\n            };\n            mari.init();\n        });\n    }\n\n    export function signIn() {\n        google.auth.signIn();\n    }\n\n    export function signOut() {\n        google.auth.signOut();\n    }\n\n    export async function refresh() {\n        if (preferences.google.sync()) await download(Filename.nominations);\n        setProgress(0);\n        setStatus(State.Status.processingMails);\n        const raws = getRaws()\n        await mari.start(raws);\n        const matchTargets: Array<Nomination> = [];\n        const reduced = raws.reduce((list, nomination) => {\n            if (nomination.id.length < 1) {\n                console.log(`service.arrange: Need match: #${nomination.id}[${nomination.title}]`);\n                matchTargets.push(nomination);\n                return list;\n            }\n            // Merge\n            let merged = false;\n            for (const target of list) {\n                if (target.merge(nomination)) {\n                    merged = true;\n                    break;\n                }\n            }\n            if (!merged) {\n                list.push(nomination);\n            }\n            return list;\n        }, new Array<Nomination>());\n        console.log(`service.arrange: ${raws.length} reduced to ${reduced.length}`);\n        if (matchTargets.length > 0) {\n            await match(matchTargets, reduced);\n        }\n        await queryBrainstorming(reduced);\n        if (preferences.google.sync()) {\n            await upload();\n        }\n        _store.commit('setNominations', reduced);\n        save();\n        setStatus(State.Status.idle);\n    }\n\n    export async function sync() {\n        await download(Filename.nominations);\n        await upload();\n    }\n\n    export async function upload() {\n        setStatus(State.Status.syncing);\n        const blob = getNominationsBlod();\n        await google.drive.upload(Filename.nominations, mimeJSON, blob, google.auth.accessToken);\n        setStatus(State.Status.idle);\n    }\n\n    export function migrate(callback: CountCallback) {\n        download(Filename.legacy).then(count => {\n            setStatus(State.Status.idle);\n            callback(count);\n        })\n    }\n\n    export function importNominationsFile(callback: CountCallback) {\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.accept = 'json';\n        input.hidden = true;\n        input.addEventListener('change', () => {\n            setTimeout(() => {\n                input.remove();\n            }, 1000);\n            if (!input.files || input.files.length < 1) return;\n            const file = input.files[0];\n            const fileReader = new FileReader();\n            fileReader.onload = () => {\n                if (typeof fileReader.result !== 'string') return;\n                try {\n                    const list = JSON.parse(fileReader.result) as Array<NominationData>;\n                    const count = importNominations(list);\n                    callback(count);\n                } catch (error) {\n                    callback(0);\n                }\n            };\n            fileReader.readAsText(file);\n        }, false);\n        document.body.append(input);\n        input.click();\n    }\n\n    export function exportNominationsFile() {\n        const anchor = document.createElement('a');\n        anchor.href = URL.createObjectURL(getNominationsBlod());\n        anchor.download = Filename.nominations;\n        anchor.hidden = true;\n        document.body.append(anchor);\n        anchor.click();\n        anchor.remove();\n    }\n\n    /**\n     * Import JSON from Wayfarer API response\n     * \n     * Error codes\n     * - `-1` Parse error\n     * - `-2` Invalid data\n     * @param json Raw JSON\n     * @returns Count of updated nominations or error code\n     */\n    export function importWayfarerJSON(json: string): number {\n        let parsed;\n        try {\n            parsed = JSON.parse(json);\n        } catch (error) {\n            // Parse error\n            return -1;\n        }\n        if (!parsed.result || parsed.result.length < 1) {\n            // Invalid data\n            return -2;\n        }\n\n        const nominations = _store.state.nominations;\n        const mapNomination = nominations.reduce((map, nomination) => {\n            map.set(nomination.id, nomination);\n            return map;\n        }, new Map<string, Nomination>());\n        \n        let count = 0;\n        for (const data of parsed.result) {\n            const id = Nomination.parseId(data.imageUrl);\n            const nomination = mapNomination.get(id);\n            if (!nomination) continue;\n            nomination.title = data.title;\n            nomination.lngLat = {\n                lng: parseFloat(data.lng),\n                lat: parseFloat(data.lat)\n            };\n            count += 1;\n        }\n        save();\n        return count;\n    }\n\n    export function update(nomination: Nomination) {\n        dia.save(toRaw(nomination));\n    }\n\n    export function clearNominations() {\n        dia.clear();\n        _store.commit('setNominations', []);\n    }\n\n    export function deleteNomination(id: string) {\n        dia.remove(id);\n        _store.commit('deleteNomination', id);\n    }\n\n    export function save() {\n        const raws = getRaws();\n        dia.saveAll(raws);\n    }\n\n    /**\n     * Some result mails don't contain image URL, should match from pending nominations manually.\n     * @param targets Nominations without image\n     * @param list Normal nominations\n     */\n     async function match(targets: Array<Nomination>, list: Array<Nomination>) {\n        const pendings = list.filter(umi.status.get(umi.StatusCode.Pending)!.predicator);\n        const packs: Array<MatchPack> = [];\n        for (const target of targets) {\n            const checkScanner = target.scanner !== umi.ScannerCode.Unknown;\n            const candidates = pendings.filter((nomination) => {\n                if (nomination.title !== target.title) return false;\n                if (nomination.confirmedTime >= target.resultTime) return false;\n                if (checkScanner && nomination.scanner !== umi.ScannerCode.Unknown && nomination.scanner !== nomination.scanner) return false;\n                return true;\n            });\n            if (candidates.length < 1) continue;\n            packs.push({ target: target, candidates: candidates, selected: '' });\n        }\n        return new Promise<void>((resolve) => {\n            if (packs.length < 1) {\n                resolve();\n                return;\n            }\n            matchData.packs = packs;\n            matchData.callback = () => {\n                matchData.callback = () => { };\n                for (const pack of matchData.packs) {\n                    if (pack.selected.length < 1) continue;\n                    for (const candidate of pack.candidates) {\n                        if (candidate.id !== pack.selected) continue;\n                        pack.target.image = candidate.image;\n                        pack.target.id = candidate.id;\n                        break;\n                    }\n                    if (pack.target.id.length < 1) continue;\n                    for (const nomination of list) {\n                        nomination.merge(pack.target);\n                    }\n                }\n                matchData.packs = [];\n                resolve();\n            };\n            setStatus(State.Status.requestMatch);\n        });\n    }\n\n    async function queryBrainstorming(list: Array<Nomination>) {\n        if (!preferences.brainstorming.autoQueryFirebase()) return;\n        setStatus(State.Status.queryingBrainstorming);\n        let count = 0;\n        for (const nomination of list) {\n            count++;\n            if (nomination.lngLat) {\n                setProgress(count / list.length);\n                continue;\n            }\n            const record = await brainstorming.query(nomination).catch(_ => undefined);\n            if (!record) {\n                setProgress(count / list.length);\n                continue;\n            }\n            nomination.lngLat = {\n                lng: parseFloat(record.lng), lat: parseFloat(record.lat)\n            };\n            setProgress(count / list.length);\n        }\n    }\n\n    function setStatus(status: State.Status) {\n        _store.commit('setStatus', status);\n    }\n\n    function setProgress(progress: number) {\n        _store.commit('setProgress', progress);\n    }\n\n    async function download(filename: Filename) {\n        setStatus(State.Status.syncing);\n        const file = await google.drive.download(filename, content => {\n            try {\n                const list = content as Array<NominationData>;\n                list.forEach(data => Nomination.from(data));\n            } catch {\n                return false;\n            }\n            return true;\n        });\n        if (!file) return 0;\n        return importNominations(file as Array<NominationData>);\n    }\n\n    function importNominations(list: Array<NominationData>): number {\n        let count = 0;\n        try {\n            const sources = list.map(data => Nomination.from(data));\n            const nominations = _store.state.nominations.map((nomination) => nomination);\n            for (const nomination of sources) {\n                let merged = false;\n                for (const target of nominations) {\n                    merged = target.merge(nomination);\n                    if (merged) {\n                        count += 1;\n                        break;\n                    }\n                }\n                if (merged) continue;\n                nominations.push(nomination);\n            }\n            _store.commit('setNominations', nominations);\n            save();\n        } catch (error) {\n            count = 0;\n        }\n        return count;\n    }\n\n    function getRaws(): Array<Nomination> {\n        return _store.state.nominations.map(nomination => toRaw(nomination));\n    }\n\n    function getNominationsBlod(): Blob {\n        const raws = _store.state.nominations.map((nomination) => nomination.data);\n        return new Blob(\n            [ JSON.stringify(raws, null, 4) ],\n            { type: mimeJSON }\n        )\n    }\n\n    async function load() {\n        await dia.init();\n        const raws = await dia.load();\n        const nominations = raws.map(raw => Nomination.from(raw));\n        _store.commit('setNominations', nominations);\n        brainstorming.init();\n    }\n\n    /**\n     * Open local file\n     */\n    /*\n    export function open() {\n        events.clear();\n        const onload = (content: string) => {\n            const resultNominations = Parser.nominations(content);\n            if (resultNominations.matched) {\n                nominations.length = 0;\n                nominations.push(...resultNominations.nominations);\n                arrange();\n                return;\n            }\n            const resultBsData = Parser.bsData(content);\n            if (resultBsData.matched) {\n                bs.data = resultBsData.data;\n                if (nominations.length > 0) {\n                    events.bsUpdate();\n                }\n                events.info(i18next.t('message:service.loadBsData'));\n                return;\n            }\n            // Parse as other contents\n        };\n        file.local.open(onload, events.alert);\n    }\n    */\n    \n    /**\n     * Query Brainstorming firebase and update local bs data\n     */\n    /*\n    export function updateBsData() {\n        bs.update(nominations, () => {\n            events.bsUpdate();\n            events.info(i18next.t('message:service.bsDataUpdated'));\n        });\n    }\n    */\n}","import { preferences } from '@/service/preferences';\nimport { umi } from '@/service/umi';\nimport { MessageCallback, ProgressCallback } from '@/service/types';\nimport Nomination from '@/service/nomination';\n\nimport { parser } from './parser';\n\n/**\n * Events for {@link Mari}\n */\ninterface MariEvents {\n    alert:      MessageCallback;    // Triggered when alert should be displayed\n    progress:   ProgressCallback,   // Triggered when main progress update\n}\n\n/**\n * Item of {@link Progress}\n */\nclass ProgressItem {\n    total: number = 0;\n    finished: number = 0;\n\n    clear() {\n        this.total = 0;\n        this.finished = 0;\n    }\n\n    /**\n     * Detect if the progress is not 100%\n     */\n    get left() {\n        return this.finished < this.total;\n    }\n\n    /**\n     * The percentage of progress\n     */\n    get percent() {\n        return this.total === 0 ? 0.0 : (this.finished / this.total);\n    }\n}\n\n/**\n * Manage the progress of mail processing\n */\nclass Progress {\n\n    lists = new ProgressItem();\n    messages = new ProgressItem();\n\n    onProgress  : ProgressCallback  = () => { };    // Triggered when a message finished if all lists are finished\n\n    /**\n     * Clear all progress\n     */\n    clear() {\n        this.lists.clear();\n        this.messages.clear();\n    }\n\n    /**\n     * Add a WIP list\n     */\n    addList() {\n        this.lists.total += 1;\n    }\n\n    /**\n     * Finish a list and check finish\n     * @param messages Count of the messages to process\n     */\n    finishList(messages: number) {\n        this.lists.finished += 1;\n        this.messages.total += messages;\n        this.onProgress(this.percent);\n        console.log(`Mari progress: [list][${this.lists.finished}/${this.lists.total}]`);\n    }\n\n    /**\n     * Finish a message and check finish\n     */\n    finishMessage() {\n        this.messages.finished += 1;\n        console.log(`Mari progress: [message][${this.messages.finished}/${this.messages.total}]`);\n        if (!this.lists.left) {\n            this.onProgress(this.percent);\n        }\n    }\n\n    /**\n     * Detect if there is list or message left\n     */\n    private get left() {\n        return this.lists.left || this.messages.left;\n    }\n\n    /**\n     * The percentage of progress\n     */\n    private get percent() {\n        if (this.lists.total === 0 || this.messages.total === 0) {\n            return 0.0\n        }\n        if (this.lists.left) {\n            return this.lists.percent * 0.2;\n        }\n        return 0.2 + this.messages.percent * 0.8;\n    }\n}\n\n/**\n * Query and process mails\n */\nexport default class Mari {\n\n    private queryAfter: string = '';\n    private ignoreIds: Array<string> = [];      // List of ids of mails that should be ignored\n    private nominations: Array<Nomination> = [];    // List of nominations\n\n    private progress = new Progress();  // Progress manager\n\n    events: MariEvents = {\n        alert:  () => {},\n        progress: () => {},\n    };\n\n    /**\n     * Initiate Mari\n     */\n    init() {\n        this.progress.onProgress = (percent) => this.events.progress(percent);\n    }\n\n    /**\n     * Start the process\n     * @param nominations Existing nominations\n     */\n    async start(nominations: Array<Nomination>) {\n        this.nominations.length = 0;\n        this.progress.lists.clear();\n        this.progress.messages.clear();\n\n        // Ignore the mails already in the list\n        this.ignoreIds = nominations.flatMap(nomination => {\n            return nomination.resultMailId.length > 0 \n                ? [ nomination.confirmationMailId, nomination.resultMailId ] : [ nomination.confirmationMailId ];\n        });\n        if (preferences.general.queryAfterLatest()) {\n            const latest = Math.floor(this.nominations.reduce((time, nomination) => {\n                return Math.max(time, nomination.confirmedTime, nomination.resultTime)\n            }, 0) / 1000);\n            this.queryAfter = ` after:${latest}`;\n        } else {\n            this.queryAfter = '';\n        }\n        const queries: Array<Promise<void>> = [];\n        for (const status of umi.status.values()) {\n            for (const scanner of status.queries.keys()) {\n                queries.push(this.query(status, scanner));\n            }\n        }\n        await Promise.allSettled(queries);\n        nominations.push(...this.nominations);\n        return;\n    }\n\n    /**\n     * Start to query message list\n     * @param status Status to query\n     * @param scanner Scanner to query\n     */\n    private async query(status: umi.Status, scanner: umi.ScannerCode) {\n        this.progress.addList();\n        // Query ID list\n        const ids: Array<string> = [];\n        let pageToken: string | undefined = undefined;\n        do {\n            type ListResponse = gapi.client.Response<gapi.client.gmail.ListMessagesResponse>;\n            const response: ListResponse = await gapi.client.gmail.users.messages.list({\n                userId: 'me',\n                q: `${status.queries.get(scanner)!}${this.queryAfter}`,\n                pageToken: pageToken\n            });\n            if (!response) break;\n            if (response.result.messages) {\n                const filtered = response.result.messages.filter(message => {\n                    if (!message.id) return false;\n                    return !this.ignoreIds.includes(message.id);\n                }).map(message => message.id!);\n                ids.push(...filtered);\n            }\n            pageToken = response.result.nextPageToken;\n        } while (pageToken);\n        this.progress.finishList(ids.length);\n        // Query and parse mails\n        for (const id of ids) {\n            const response = await gapi.client.gmail.users.messages.get({\n                userId: 'me',\n                id: id,\n                format: 'full',\n                metadataHeaders: 'Subject'\n            });\n            if (!response) continue;\n            const fullMail = response.result;\n            try {\n                const nomination = parser.parse(fullMail, status.code, scanner);\n                this.nominations.push(nomination);\n            } catch (error) {\n                let subject = '';\n                for (const header of fullMail.payload!.headers!) {\n                    if (header.name === 'Subject') {\n                        subject = header.value!;\n                        break;\n                    }\n                }\n                let details: string = error;\n                if ('message' in error) {\n                    const typedError = error as Error;\n                    details = typedError.stack || typedError.message;\n                }\n                this.events.alert(`message:service.mari.reportParserError ${subject} [${status}:${scanner}]${details}`);\n            }\n            this.progress.finishMessage();\n        }\n        return;\n    }\n}","<template>\n<button class=\"fa mdc-icon-button\">\n    <material-icon-raw :icon=\"icon\"/>\n</button>\n</template>\n\n<script lang=\"ts\">\nimport { MDCRipple } from '@material/ripple';\nimport { Vue, Options, Prop } from 'vue-property-decorator';\n\nimport MaterialIconRaw from './IconRaw.vue';\n\n@Options({\n    components: {\n        MaterialIconRaw\n    },\n})\nexport default class MaterialTopAppBar extends Vue {\n\n    @Prop(String) readonly icon!: string;\n\n    private ctrl?: MDCRipple;\n\n    mounted() {\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    updated() {\n        this.ctrl?.destroy();\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    unmounted() {\n        this.ctrl?.destroy();\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@use '~@material/icon-button';\n\n@include icon-button.core-styles;\n</style>","\nimport { MDCRipple } from '@material/ripple';\nimport { Vue, Options, Prop } from 'vue-property-decorator';\n\nimport MaterialIconRaw from './IconRaw.vue';\n\n@Options({\n    components: {\n        MaterialIconRaw\n    },\n})\nexport default class MaterialTopAppBar extends Vue {\n\n    @Prop(String) readonly icon!: string;\n\n    private ctrl?: MDCRipple;\n\n    mounted() {\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    updated() {\n        this.ctrl?.destroy();\n        this.ctrl = MDCRipple.attachTo(this.$el);\n        this.ctrl.unbounded = true;\n    }\n\n    unmounted() {\n        this.ctrl?.destroy();\n    }\n}\n","import { render } from \"./IconButton.vue?vue&type=template&id=0b15f13c\"\nimport script from \"./IconButton.vue?vue&type=script&lang=ts\"\nexport * from \"./IconButton.vue?vue&type=script&lang=ts\"\n\nimport \"./IconButton.vue?vue&type=style&index=0&id=0b15f13c&lang=scss\"\nscript.render = render\n\nexport default script","const StringKeyBase = 'service.nomination';\n\nexport const StringKey = {\n    day: `${StringKeyBase}.day`,\n    missing: `${StringKeyBase}.missing`,\n\n    messageParseErrorMissingId: `message:${StringKeyBase}.parseErrorMissingId`,\n    messageParseErrorMissingTitle: `message:${StringKeyBase}.parseErrorMissingTitle`,\n    messageParseErrorMissingImage: `message:${StringKeyBase}.parseErrorMissingImage`,\n    messageParseErrorInvalidId: `message:${StringKeyBase}.parseErrorInvalidId`,\n    messageParseErrorInvalidImage: `message:${StringKeyBase}.parseErrorInvalidImage`,\n}","import { umi } from '@/service/umi';\n\nimport { StringKey } from './constants';\n\n/**\n * Location\n */\nexport interface LngLat {\n    lng: number;    // Longitude\n    lat: number;    // Latitude\n}\n\nexport interface NominationData {\n    id: string;     // Short ID, also brainstorming ID\n    title: string;  // Title\n    image: string;  // Hash part of the image URL\n    scanner: umi.ScannerCode;   // Scanner of the nomination\n\n    status: umi.StatusCode; // Status code\n    reasons?: Array<umi.ReasonCode>; // Reason codes\n\n    confirmedTime: number;  // Confirmed time, the timestamp of confirmation mail\n    confirmationMailId: string; // ID of confirmation mail\n    resultTime?: number; // Result time, the timestamp of result mail\n    resultMailId?: string;   // ID of result mail\n\n    lngLat?: LngLat;    // Location\n}\n\n/**\n * Nomination data\n */\nexport default class Nomination implements NominationData {\n\n    private static timestampSecondBound = 1E12;\n\n    /**\n     * Comparator for sorting by time\n     */\n    static readonly comparatorByTime = (a: Nomination, b: Nomination) => {\n        const timeA = a.resultTime ? a.resultTime : a.confirmedTime;\n        const timeB = b.resultTime ? b.resultTime : b.confirmedTime;\n        return timeA < timeB ? 1 : -1;\n    };\n\n    id = '';\n    title = '';\n    image = '';\n    scanner: umi.ScannerCode = umi.ScannerCode.Unknown;\n\n    status: umi.StatusCode = umi.StatusCode.Pending;\n    reasons: Array<umi.ReasonCode> = [];\n\n    confirmedTime = 0;\n    confirmationMailId = '';\n    resultTime = 0;\n    resultMailId = '';\n\n    lngLat?: LngLat = undefined;\n\n    /**\n     * Get the image URL\n     */\n    get imageUrl(): string {\n        return `https://lh4.googleusercontent.com/${this.image}`;\n    }\n\n    /**\n     * Get Intel Maps URL\n     */\n    get intelUrl(): string {\n        if (this.lngLat) {\n            return `https://intel.ingress.com/intel?ll=${this.lngLat.lat},${this.lngLat.lng}&z=18`;\n        } else {\n            return 'https://intel.ingress.com/intel';\n        }\n    }\n\n    /**\n     * Get Brainstorming watermeter URL\n     */\n    get bsUrl(): string {\n        return `https://brainstorming.azurewebsites.net/watermeter.html#${this.id}`;\n    }\n\n    get scannerData(): umi.Scanner {\n        return umi.scanner.get(this.scanner)!;\n    }\n\n    /**\n     * Get status data\n     */\n    get statusData(): umi.Status {\n        return umi.status.get(this.status)!;\n    }\n\n    /**\n     * Get data of reasons\n     */\n    get reasonsData(): Array<umi.Reason> {\n        return this.reasons.map((code) => {\n            return umi.reason.get(code)!;\n        });\n    }\n\n    /**\n     * Get the time of quota being restored\n     */\n    get restoreTime(): number {\n        return this.confirmedTime + (14 * 24 * 3600 * 1000);\n    }\n\n    /**\n     * Serialize to JSON\n     */\n    get data(): NominationData {\n        let data: NominationData = {\n            id: this.id,\n            title: this.title,\n            image: this.image,\n            scanner: this.scanner,\n            status: this.status,\n            confirmedTime: this.confirmedTime / 1000,\n            confirmationMailId: this.confirmationMailId,\n        };\n        if (this.reasons.length > 0) {\n            data.reasons = this.reasons;\n        }\n        if (this.resultTime) data.resultTime = this.resultTime / 1000;\n        if (this.resultMailId) data.resultMailId = this.resultMailId;\n        if (this.lngLat) {\n            data.lngLat = {\n                lng: this.lngLat.lng,\n                lat: this.lngLat.lat\n            };\n        }\n        return data;\n    }\n\n    /**\n     * Merge from another nomination\n     * @param nomination The nomination to merge from\n     * @returns Succeed or not\n     */\n    merge(nomination: Nomination): boolean {\n        if (this.id !== nomination.id) return false;\n        if (this.status === umi.StatusCode.Pending) {\n            this.title = nomination.title;\n            this.status = nomination.status;\n            this.reasons = nomination.reasons;\n            this.resultTime = nomination.resultTime;\n            this.resultMailId = nomination.resultMailId;\n        } else {\n            this.confirmedTime = nomination.confirmedTime;\n            this.confirmationMailId = nomination.confirmationMailId;\n        }\n        if (!this.lngLat) {\n            this.lngLat = nomination.lngLat;\n        }\n        return true;\n    }\n\n    /**\n     * Parse nomination from JSON\n     * @param data Raw data to be parsed\n     * @throws An `Error` when JSON missing `id`, `title` or `image`\n     */\n    static from(data: NominationData): Nomination {\n        if (!data.id) throw new Error(StringKey.messageParseErrorMissingId);\n        if (!data.title) throw new Error(StringKey.messageParseErrorMissingTitle);\n        if (!data.image) throw new Error(StringKey.messageParseErrorMissingImage);\n\n        // Fix old issues\n        const image = data.image.replace('\\r', '');\n\n        // Test format\n        if (!/^[a-zA-Z0-9]+$/.test(data.id)) {\n            throw new Error(StringKey.messageParseErrorInvalidId);\n        }\n        if (!/^[0-9a-zA-Z\\-\\_]+$/.test(image)) {\n            throw new Error(StringKey.messageParseErrorInvalidImage);\n        }\n\n        const nomination = new Nomination();\n        nomination.id = data.id;\n        nomination.title = data.title;\n        nomination.image = image;\n\n        if (data.scanner) {\n            nomination.scanner = data.scanner;\n        }\n\n        if (data.status === umi.StatusCode.Pending) {\n            nomination.status = umi.StatusCode.Pending;\n        } else if (data.status === umi.StatusCode.Accepted) {\n            nomination.status = umi.StatusCode.Accepted;\n        } else {\n            nomination.status = umi.StatusCode.Rejected;\n            if (data.status !== umi.Reason.undeclared) {\n                if (umi.reason.has(data.status)) {\n                    nomination.reasons.push(data.status);\n                }\n            }\n        }\n        if (data.reasons) {\n            for (const code of data.reasons) {\n                if (umi.reason.has(code) && !nomination.reasons.includes(code)) {\n                    nomination.reasons.push(code);\n                }\n            }\n        }\n\n        nomination.confirmedTime = data.confirmedTime > Nomination.timestampSecondBound ? data.confirmedTime : data.confirmedTime * 1000;\n        nomination.confirmationMailId = data.confirmationMailId;\n\n        if (data.resultTime) nomination.resultTime = data.resultTime > Nomination.timestampSecondBound ? data.resultTime : data.resultTime * 1000;\n        if (data.resultMailId) nomination.resultMailId = data.resultMailId;\n\n        if (data.lngLat) {\n            nomination.lngLat = {\n                lng: data.lngLat.lng,\n                lat: data.lngLat.lat,\n            }\n        }\n        return nomination;\n    }\n\n    /**\n     * Convert hash part of image URL to short ID\n     * @param imgUrl Hash part of the image URL\n     */\n    static parseId(imgUrl: string): string {\n        return imgUrl.replace(/[^a-zA-Z0-9]/g, '').slice(-10).toLowerCase();\n    }\n}\n\n/**\n * Callback for Array<Nomination>.filter()\n */\nexport type Predicator = (nomination: Nomination) => boolean;","export namespace preferences {\n\n    export function set<T>(key: string, value: T) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    export function get<T>(key: string, def: T): T {\n        const value = localStorage.getItem(key);\n        if (value !== null) return JSON.parse(value);\n        return def;\n    }\n\n    export namespace general {\n\n        const keyQueryAfterLatest = 'potori.pref.general.queryAfterLatest';\n\n        export function queryAfterLatest(): boolean { return preferences.get(keyQueryAfterLatest, false); }\n        export function setQueryAfterLatest(value: boolean) { preferences.set(keyQueryAfterLatest, value); }\n    }\n\n    export namespace google {\n        \n        const keySync = 'potori.pref.google.sync';\n        \n        export function sync(): boolean { return preferences.get(keySync, false); }\n        export function setSync(value: boolean) { preferences.set(keySync, value); }\n    }\n\n    export namespace brainstorming {\n\n        const keyAutoQueryFirebase = 'potori.pref.brainstorming.autoQueryFirebase';\n\n        export function autoQueryFirebase(): boolean { return preferences.get(keyAutoQueryFirebase, false); }\n        export function setAutoQueryFirebase(value: boolean) { preferences.set(keyAutoQueryFirebase, value); }\n    }\n}","import versionJSON from '@/data/version.json';\nimport umiJSON from '@/data/umi/umi.json';\n\n/**\n * Version information\n */\nexport namespace version {\n    export const full = !document.URL.includes('lucka.moe');\n    export const text = `${versionJSON.version}-${full ? 'lite' : 'full'} (${versionJSON.build})`;\n    export const data = umiJSON.version;\n}","<template>\n{{ symbol }}\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Prop } from 'vue-property-decorator';\n\nconst IconSymbolMap: Record<string, string> = {\n    'search': '\\uf002',\n    'th-list'   : '\\uf00b',\n    'check' : '\\uf00c',\n    'times' : '\\uf00d',\n    'cog'   : '\\uf013',\n    'clock' : '\\uf017',\n    'redo'  : '\\uf01e',\n    'edit'  : '\\uf044',\n    'info-circle'   : '\\uf05a',\n    'arrow-left': '\\uf060',\n    'arrow-up'  : '\\uf062',\n    'plus'  : '\\uf067',\n    'calendar-alt'  : '\\uf073',\n    'folder-open'   : '\\uf07c',\n    'chart-bar' : '\\uf080',\n    'globe' : '\\uf0ac',\n    'angle-up'  : '\\uf106',\n    'angle-down': '\\uf107',\n    'ellipsis-v': '\\uf142',\n    'trash' : '\\uf1f8',\n    'map'   : '\\uf279',\n    'sync-alt'  : '\\uf2f1',\n    'sign-in-alt'   : '\\uf2f6',\n    'redo-alt'  : '\\uf2f9',\n    'pen'   : '\\uf304',\n    'map-marker-alt': '\\uf3c5',\n    'mobile-alt': '\\uf3cd',\n    'tachometer-alt': '\\uf3fd',\n    'brain' : '\\uf5dc',\n}\n\nexport default class MaterialIconRaw extends Vue {\n\n    private static nameRegex = /^[a-z\\-]+$/;\n\n    @Prop(String) readonly icon!: string;\n\n    get symbol(): string {\n        if (MaterialIconRaw.nameRegex.test(this.icon)) {\n            return IconSymbolMap[this.icon];\n        } else {\n            return this.icon;\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n$fa-font-path: '~@fortawesome/fontawesome-free/webfonts';\n@import '~@fortawesome/fontawesome-free/scss/solid';\n@import '~@fortawesome/fontawesome-free/scss/mixins';\n@import '~@fortawesome/fontawesome-free/scss/core';\n@import '~@fortawesome/fontawesome-free/scss/fixed-width';\n</style>","\nimport { Vue, Prop } from 'vue-property-decorator';\n\nconst IconSymbolMap: Record<string, string> = {\n    'search': '\\uf002',\n    'th-list'   : '\\uf00b',\n    'check' : '\\uf00c',\n    'times' : '\\uf00d',\n    'cog'   : '\\uf013',\n    'clock' : '\\uf017',\n    'redo'  : '\\uf01e',\n    'edit'  : '\\uf044',\n    'info-circle'   : '\\uf05a',\n    'arrow-left': '\\uf060',\n    'arrow-up'  : '\\uf062',\n    'plus'  : '\\uf067',\n    'calendar-alt'  : '\\uf073',\n    'folder-open'   : '\\uf07c',\n    'chart-bar' : '\\uf080',\n    'globe' : '\\uf0ac',\n    'angle-up'  : '\\uf106',\n    'angle-down': '\\uf107',\n    'ellipsis-v': '\\uf142',\n    'trash' : '\\uf1f8',\n    'map'   : '\\uf279',\n    'sync-alt'  : '\\uf2f1',\n    'sign-in-alt'   : '\\uf2f6',\n    'redo-alt'  : '\\uf2f9',\n    'pen'   : '\\uf304',\n    'map-marker-alt': '\\uf3c5',\n    'mobile-alt': '\\uf3cd',\n    'tachometer-alt': '\\uf3fd',\n    'brain' : '\\uf5dc',\n}\n\nexport default class MaterialIconRaw extends Vue {\n\n    private static nameRegex = /^[a-z\\-]+$/;\n\n    @Prop(String) readonly icon!: string;\n\n    get symbol(): string {\n        if (MaterialIconRaw.nameRegex.test(this.icon)) {\n            return IconSymbolMap[this.icon];\n        } else {\n            return this.icon;\n        }\n    }\n}\n","import { render } from \"./IconRaw.vue?vue&type=template&id=a502c746\"\nimport script from \"./IconRaw.vue?vue&type=script&lang=ts\"\nexport * from \"./IconRaw.vue?vue&type=script&lang=ts\"\n\nimport \"./IconRaw.vue?vue&type=style&index=0&id=a502c746&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n<router-view/>\n<material-dialog v-model=\"alertOpen\">{{ alertMessage }}</material-dialog>\n<material-snackbar :message=\"informMessage\" v-model=\"informOpen\"/>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Options } from 'vue-property-decorator';\n\nimport { delibird } from './service/delibird';\n\nimport MaterialDialog from '@/components/material/Dialog.vue';\nimport MaterialSnackbar from '@/components/material/Snackbar.vue';\n\n@Options({\n    components: {\n        MaterialDialog,\n        MaterialSnackbar\n    }\n})\nexport default class App extends Vue {\n\n    alertMessage: string = '';\n    alertOpen: boolean = false;\n\n    informMessage: string = '';\n    informOpen: boolean = false;\n\n    mounted() {\n        delibird.events.alert = (message) => {\n            this.alertMessage = message;\n            this.alertOpen = true;\n        };\n        delibird.events.inform = (message) => {\n            this.informMessage = message;\n            this.informOpen = true;\n        };\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@use '~@material/typography';\n@import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500&display=swap');\n\nhtml {\n    // Fix for iOS standalone mode\n    height: calc(100% + env(safe-area-inset-top, 0));\n}\n\nbody, #app {\n    margin: 0;\n    height: 100%;\n}\n\n#app {\n    @include typography.base();\n    display: flex;\n    flex-flow: column nowrap;\n\n    > main:not(.ignore-safe-area) {\n        margin-bottom: env(safe-area-inset-bottom);\n        margin-left: env(safe-area-inset-left);\n        margin-right: env(safe-area-inset-right);\n    }\n}\n</style>\n","<template>\n<div class=\"mdc-dialog\">\n    <div class=\"mdc-dialog__container\">\n        <div class=\"mdc-dialog__surface\" role=\"alertdialog\" aria-modal=\"true\">\n            <div class=\"mdc-dialog__content\">\n                <slot/>\n            </div>\n            <div class=\"mdc-dialog__actions\">\n                <slot name=\"actions\">\n                    <material-dialog-action text=\"Discard\" action=\"close\" as-default/>\n                </slot>\n            </div>\n        </div>\n    </div>\n    <div class=\"mdc-dialog__scrim\"></div>\n</div>\n</template>\n\n<script lang=\"ts\">\nimport { MDCDialog } from '@material/dialog';\nimport { Vue, Model, Options, Watch } from 'vue-property-decorator';\n\nimport MaterialDialogAction from './DialogAction.vue';\n\n@Options({\n    components: {\n        MaterialDialogAction\n    }\n})\nexport default class MaterialDialog extends Vue {\n\n    @Model('modelValue', { type: Boolean, default: false }) readonly value!: boolean;\n\n    private ctrl?: MDCDialog;\n\n    @Watch('value')\n    onValueChanged(newVal: boolean, _: string) {\n        if (!this.ctrl) return;\n        if (newVal) this.ctrl.open();\n    }\n\n    mounted() {\n        this.ctrl = MDCDialog.attachTo(this.$el);\n        this.ctrl.listen('MDCDialog:closed', () => {\n            this.$emit('update:modelValue', false);\n        });\n        if (this.value) this.ctrl.open();\n    }\n\n    unmounted() {\n        if (this.ctrl?.isOpen) this.ctrl?.close();\n        this.ctrl?.destroy();\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@use \"@material/dialog\";\n\n@include dialog.core-styles;\n</style>","<template>\n<material-button\n    type=\"button\" class=\"mdc-dialog__button\"\n    :data-mdc-dialog-action=\"action\"\n    :data-mdc-dialog-button-default=\"asDefault\">\n    {{ text }}\n</material-button>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Options, Prop } from 'vue-property-decorator';\n\nimport MaterialButton from './Button.vue';\n\n@Options({\n    components: {\n        MaterialButton\n    }\n})\nexport default class MaterialDialogAction extends Vue {\n    @Prop(String) readonly action?: string;\n    @Prop(Boolean) readonly asDefault?: boolean;\n    @Prop(String) readonly text!: string;\n}\n</script>\n\n<style lang=\"scss\">\n\n</style>","\nimport { Vue, Options, Prop } from 'vue-property-decorator';\n\nimport MaterialButton from './Button.vue';\n\n@Options({\n    components: {\n        MaterialButton\n    }\n})\nexport default class MaterialDialogAction extends Vue {\n    @Prop(String) readonly action?: string;\n    @Prop(Boolean) readonly asDefault?: boolean;\n    @Prop(String) readonly text!: string;\n}\n","import { render } from \"./DialogAction.vue?vue&type=template&id=5ae349b4\"\nimport script from \"./DialogAction.vue?vue&type=script&lang=ts\"\nexport * from \"./DialogAction.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { MDCDialog } from '@material/dialog';\nimport { Vue, Model, Options, Watch } from 'vue-property-decorator';\n\nimport MaterialDialogAction from './DialogAction.vue';\n\n@Options({\n    components: {\n        MaterialDialogAction\n    }\n})\nexport default class MaterialDialog extends Vue {\n\n    @Model('modelValue', { type: Boolean, default: false }) readonly value!: boolean;\n\n    private ctrl?: MDCDialog;\n\n    @Watch('value')\n    onValueChanged(newVal: boolean, _: string) {\n        if (!this.ctrl) return;\n        if (newVal) this.ctrl.open();\n    }\n\n    mounted() {\n        this.ctrl = MDCDialog.attachTo(this.$el);\n        this.ctrl.listen('MDCDialog:closed', () => {\n            this.$emit('update:modelValue', false);\n        });\n        if (this.value) this.ctrl.open();\n    }\n\n    unmounted() {\n        if (this.ctrl?.isOpen) this.ctrl?.close();\n        this.ctrl?.destroy();\n    }\n}\n","import { render } from \"./Dialog.vue?vue&type=template&id=bcc32e7a\"\nimport script from \"./Dialog.vue?vue&type=script&lang=ts\"\nexport * from \"./Dialog.vue?vue&type=script&lang=ts\"\n\nimport \"./Dialog.vue?vue&type=style&index=0&id=bcc32e7a&lang=scss\"\nscript.render = render\n\nexport default script","<template>\n<aside class=\"mdc-snackbar\">\n    <div class=\"mdc-snackbar__surface\" role=\"status\" aria-relevant=\"additions\">\n        <div class=\"mdc-snackbar__label\" aria-atomic=\"false\"></div>\n        <div class=\"mdc-snackbar__actions\" aria-atomic=\"true\">\n            <material-icon-button class=\"mdc-snackbar__dismiss\" icon=\"times\"/>\n        </div>\n    </div>\n</aside>\n</template>\n\n<script lang=\"ts\">\nimport { MDCSnackbar } from '@material/snackbar';\nimport { Vue, Model, Options, Prop, Watch } from 'vue-property-decorator';\n\nimport MaterialIconButton from './IconButton.vue';\n\n@Options({\n    components: {\n        MaterialIconButton\n    }\n})\nexport default class MaterialSnackbar extends Vue {\n\n    @Model('modelValue', { type: Boolean, default: false }) readonly value!: boolean;\n    @Prop(String) readonly message!: string;\n\n    private ctrl?: MDCSnackbar;\n\n    @Watch('message')\n    onMessageChanged(newVal: string, _: string) {\n        if (!this.ctrl) return;\n        this.ctrl.labelText = newVal;\n    }\n\n    @Watch('value')\n    onValueChanged(newVal: boolean, _: string) {\n        if (!this.ctrl) return;\n        if (newVal) this.ctrl.open();\n    }\n\n    mounted() {\n        this.ctrl = MDCSnackbar.attachTo(this.$el);\n        this.ctrl.labelText = this.message;\n        this.ctrl.listen('MDCSnackbar:closed', () => {\n            this.$emit('update:modelValue', false);\n        });\n        if (this.value) this.ctrl.open();\n    }\n\n    unmounted() {\n        if (this.ctrl?.isOpen) this.ctrl?.close();\n        this.ctrl?.destroy();\n    }\n}\n</script>\n\n<style lang=\"scss\">\n@use \"@material/snackbar/mdc-snackbar\";\n</style>","\nimport { MDCSnackbar } from '@material/snackbar';\nimport { Vue, Model, Options, Prop, Watch } from 'vue-property-decorator';\n\nimport MaterialIconButton from './IconButton.vue';\n\n@Options({\n    components: {\n        MaterialIconButton\n    }\n})\nexport default class MaterialSnackbar extends Vue {\n\n    @Model('modelValue', { type: Boolean, default: false }) readonly value!: boolean;\n    @Prop(String) readonly message!: string;\n\n    private ctrl?: MDCSnackbar;\n\n    @Watch('message')\n    onMessageChanged(newVal: string, _: string) {\n        if (!this.ctrl) return;\n        this.ctrl.labelText = newVal;\n    }\n\n    @Watch('value')\n    onValueChanged(newVal: boolean, _: string) {\n        if (!this.ctrl) return;\n        if (newVal) this.ctrl.open();\n    }\n\n    mounted() {\n        this.ctrl = MDCSnackbar.attachTo(this.$el);\n        this.ctrl.labelText = this.message;\n        this.ctrl.listen('MDCSnackbar:closed', () => {\n            this.$emit('update:modelValue', false);\n        });\n        if (this.value) this.ctrl.open();\n    }\n\n    unmounted() {\n        if (this.ctrl?.isOpen) this.ctrl?.close();\n        this.ctrl?.destroy();\n    }\n}\n","import { render } from \"./Snackbar.vue?vue&type=template&id=12cf8ebd\"\nimport script from \"./Snackbar.vue?vue&type=script&lang=ts\"\nexport * from \"./Snackbar.vue?vue&type=script&lang=ts\"\n\nimport \"./Snackbar.vue?vue&type=style&index=0&id=12cf8ebd&lang=scss\"\nscript.render = render\n\nexport default script","\nimport { Vue, Options } from 'vue-property-decorator';\n\nimport { delibird } from './service/delibird';\n\nimport MaterialDialog from '@/components/material/Dialog.vue';\nimport MaterialSnackbar from '@/components/material/Snackbar.vue';\n\n@Options({\n    components: {\n        MaterialDialog,\n        MaterialSnackbar\n    }\n})\nexport default class App extends Vue {\n\n    alertMessage: string = '';\n    alertOpen: boolean = false;\n\n    informMessage: string = '';\n    informOpen: boolean = false;\n\n    mounted() {\n        delibird.events.alert = (message) => {\n            this.alertMessage = message;\n            this.alertOpen = true;\n        };\n        delibird.events.inform = (message) => {\n            this.informMessage = message;\n            this.informOpen = true;\n        };\n    }\n}\n","import { render } from \"./App.vue?vue&type=template&id=4edf6c57\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=4edf6c57&lang=scss\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHashHistory, RouteRecordRaw } from 'vue-router';\n\nconst routes: Array<RouteRecordRaw> = [\n    {\n        path: '/',\n        name: 'Dashboard',\n        component: () => import(/* webpackChunkName: 'dashboard' */ '@/views/Dashboard.vue')\n    },\n    {\n        path: '/charts',\n        name: 'Charts',\n        component: () => import(/* webpackChunkName: 'charts' */ '@/views/Charts.vue'),\n    },\n    {\n        path: '/list',\n        name: 'List',\n        component: () => import(/* webpackChunkName: 'list' */ '@/views/NominationList.vue'),\n    },\n    {\n        path: '/details',\n        name: 'Details',\n        component: () => import(/* webpackChunkName: 'details' */ '@/views/NominationDetails.vue'),\n    },\n    {\n        path: '/map',\n        name: 'Map',\n        component: () => import(/* webpackChunkName: 'map' */ '@/views/NominationMap.vue'),\n    },\n    {\n      path: '/preferences',\n      name: 'Preferences',\n      component: () => import(/* webpackChunkName: 'preferences' */ '@/views/Preferences.vue')\n    },\n\n    {\n        path: '/match',\n        name: 'Match',\n        component: () => import(/* webpackChunkName: 'match' */ '@/views/MatchView.vue')\n    },\n];\n\nconst router = createRouter({\n    history: createWebHashHistory('/next/'),\n    routes: routes,\n});\n\nexport default router\n","import { createApp } from 'vue';\n\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport { service } from './service';\n\nservice.init(store);\ncreateApp(App)\n    .use(store)\n    .use(router)\n    .mount('#app');\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./IconRaw.vue?vue&type=style&index=0&id=a502c746&lang=scss\"","import data from '@/data/umi/umi.json';\nimport { Predicator } from '@/service/nomination';\n\n/**\n * Keep all status data\n */\nexport namespace umi {\n\n    /**\n     * Code to identify scanner\n     */\n    export enum ScannerCode {\n        Unknown     = 0,\n        Redacted    = 1,\n        Prime       = 2,\n    }\n    \n    /**\n     * Scanner information\n     */\n    export class Scanner {\n        readonly code: ScannerCode;\n        readonly title: string;\n\n        readonly predicator: Predicator;    // Predicator for filter\n\n        constructor(code: ScannerCode, title: string) {\n            this.code = code;\n            this.title = title;\n            this.predicator = (nomination) => nomination.scanner === this.code;\n        }\n    }\n\n    /**\n     * Code to identify status\n     */\n    export enum StatusCode {\n        Pending     = 0,\n        Accepted    = 1,\n        Rejected    = 101,\n    }\n\n    /**\n     * Code to identify reason\n     */\n    export type ReasonCode = number;\n    \n    /**\n     * Status information\n     */\n    export class Status {\n\n        readonly code: StatusCode; // Code to identify the status and saved in file\n        readonly title: string; // Title to display\n        readonly icon: string;  // Icon to represent the status\n    \n        readonly queries: Map<ScannerCode, string>;  // Queries to search mails, <scanner, query>\n\n        readonly predicator: Predicator;    // Predicator for filter\n    \n        constructor(\n            code: number, title: string, icon: string,\n            queries: Map<ScannerCode, string>\n        ) {\n            this.code = code;\n            this.title = title;\n            this.icon = icon;\n\n            this.queries = queries;\n            this.predicator = (nomination) => nomination.status === this.code;\n        }\n    }\n    \n    /**\n     * Reason information\n     */\n    export class Reason {\n\n        static undeclared: ReasonCode = 101;\n        static duplicated: ReasonCode = 102;\n        static close: ReasonCode = 103;\n\n        //readonly key: string;   // Key of the status\n        readonly code: ReasonCode; // Code to identify the status and saved in file\n        readonly title: string; // Title to display\n        readonly icon: string;  // Icon to represent the status\n    \n        readonly color: string; // Color to represent the reason in charts\n        readonly keywords: Map<ScannerCode, Array<string>>;  // Keywords to identify the reason, <scanner, keywords>\n\n        readonly predicator: Predicator;    // Predicator for filter\n    \n        constructor(\n            code: number, title: string, icon: string,\n            color: string, keyword: Map<ScannerCode, Array<string>>\n        ) {\n            this.code = code;\n            this.title = title;\n            this.icon = icon;\n\n            this.color = color;\n            this.keywords = keyword;\n\n            if (code === Reason.undeclared) {\n                this.predicator = (nomination) => nomination.status === StatusCode.Rejected && nomination.reasons.length < 1;\n            } else {\n                this.predicator = (nomination) => nomination.status === StatusCode.Rejected && nomination.reasons.indexOf(code) > -1;\n            }\n        }\n    }\n\n    /**\n     * Common type of `Scanner`, `Status` and `Reason`\n     */\n    export type CommonSense = Scanner | Status | Reason;\n    \n    export const scanner = data.scanners.reduce((map, json) => {\n        const scanner = new Scanner(json.code, json.title);\n        map.set(scanner.code, scanner);\n        return map;\n    }, new Map<ScannerCode, Scanner>());\n\n    export const status = data.statuses.reduce((map, json) => {\n        const status = new Status(\n            json.code, json.title, json.iconFA,\n            json.queries.reduce((quries, query) => {\n                quries.set(query.scanner, query.query);\n                return quries;\n            }, new Map<ScannerCode, string>())\n        );\n        map.set(status.code, status);\n        return map;\n    }, new Map<StatusCode, Status>());\n\n    export const reason = data.reasons.reduce((map, json) => {\n        const reason = new Reason(\n            json.code, json.title, json.iconFA, json.color,\n            json.keywords.reduce((mapKeywords, keywords) => {\n                mapKeywords.set(keywords.scanner, keywords.keywords);\n                return mapKeywords;\n            }, new Map<ScannerCode, Array<string>>())\n        );\n        map.set(reason.code, reason);\n        return map;\n    }, new Map<ReasonCode, Reason>());\n}","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Dialog.vue?vue&type=style&index=0&id=bcc32e7a&lang=scss\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./IconButton.vue?vue&type=style&index=0&id=0b15f13c&lang=scss\""],"sourceRoot":""}